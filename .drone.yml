kind: pipeline
type: docker
name: default

steps:
  - name: test
    image: docker:26-cli
    volumes:
      - name: dockersock
        path: /var/run
    commands:
      - sleep 5
      - until docker ps -a; do sleep 1; done
      - echo "Docker is ready"

  - name: build
    image: docker:26-cli
    volumes:
      - name: dockersock
        path: /var/run
    environment:
      DOCKER_USERNAME:
        from_secret: docker_username
      DOCKER_TOKEN:
        from_secret: docker_token
    commands:
      - echo $DOCKER_TOKEN | docker login -u $DOCKER_USERNAME --password-stdin
      - docker build -t "eliyip/mdbook-katex:${DRONE_TAG##v}" .
      - docker tag "eliyip/mdbook-katex:${DRONE_TAG##v}" eliyip/mdbook-katex:latest
      - docker run -v /var/run/docker.sock:/var/run/docker.sock eliyip/slim:1.40.11 build --tag "eliyip/mdbook-katex:${DRONE_TAG##v}-slim" --target "eliyip/mdbook-katex:${DRONE_TAG##v}" --http-probe=false --include-shell --include-path "/app"
      - docker tag "eliyip/mdbook-katex:${DRONE_TAG##v}-slim" eliyip/mdbook-katex:latest-slim

  - name: publish
    image: docker:26-cli
    volumes:
      - name: dockersock
        path: /var/run
    environment:
      DOCKER_USERNAME:
        from_secret: docker_username
      DOCKER_TOKEN:
        from_secret: docker_token
    commands:
      - echo $DOCKER_TOKEN | docker login -u $DOCKER_USERNAME --password-stdin
      - |
        docker images eliyip/mdbook-katex --format "{{.Repository}}:{{.Tag}}" | while read image; do
          docker push "$image"
        done

services:
  - name: docker
    image: docker:26-dind
    privileged: true
    volumes:
      - name: dockersock
        path: /var/run

volumes:
  - name: dockersock
    temp: {}

trigger:
  event:
    - tag
